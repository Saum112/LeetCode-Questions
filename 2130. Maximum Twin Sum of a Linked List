class Solution {
    public int pairSum(ListNode head) {

        ListNode slow = head , fast = head , first = head;
        int maxSum = 0;
        
        //middle of linked list

        while(fast != null && fast.next != null){

            fast = fast.next.next;
            slow = slow.next;

        }

        //reverse the second half

        ListNode nextNode = slow , prev = null;
         
        while(slow != null) {

         nextNode = slow.next;
         slow.next = prev;
         
         prev = slow;
         slow = nextNode;

        }

        //maximum Twin Sum 

        while(prev != null){

            maxSum = Math.max(maxSum , prev.val + first.val);
            prev = prev.next;
            first = first.next;

        }

        return maxSum;
    }
}
